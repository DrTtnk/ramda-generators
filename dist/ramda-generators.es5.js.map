{"version":3,"file":"ramda-generators.es5.js","sources":["../node_modules/ramda/es/internal/_isPlaceholder.js","../node_modules/ramda/es/internal/_curry1.js","../node_modules/ramda/es/internal/_curry2.js","../node_modules/ramda/es/internal/_arity.js","../node_modules/ramda/es/internal/_curryN.js","../node_modules/ramda/es/curryN.js","../node_modules/ramda/es/internal/_identity.js","../node_modules/ramda/es/identity.js","../node_modules/ramda/es/pair.js","../node_modules/ramda/es/uncurryN.js","../src/scan.ts","../src/countBy.ts","../src/debounceBy.ts","../src/debounce.ts","../src/dropWhile.ts","../src/drop.ts","../src/filter.ts","../src/find.ts","../src/flatMap.ts","../src/generate.ts","../src/head.ts","../src/last.ts","../src/map.ts","../src/periodic.ts","../src/range.ts","../src/splitEvery.ts","../src/takeAll.ts","../src/takeWhile.ts","../src/take.ts","../src/uniqBy.ts","../src/zipWith.ts","../src/zip.ts","../src/ramda-generators.ts"],"sourcesContent":["export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './_curry1.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport _curry2 from './internal/_curry2.js';\nimport _curryN from './internal/_curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1.js';\nimport _identity from './internal/_identity.js';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _scan<T, R>(fn: (acc: R, el: T) => R, init: R, gen: Generator<T, void>) {\n    // eslint-disable-next-line no-param-reassign\n    for (const value of gen) { yield init = fn(init, value); }\n}\n\nasync function* _scanAsync<T, R>(fn: (acc: R, el: T) => R, init: R, gen: AsyncGenerator<T, void>) {\n    // eslint-disable-next-line no-param-reassign\n    for await (const value of gen) { yield init = fn(init, value); }\n}\n\ntype Scan<TYPE extends \"sync\"|\"async\"> = {\n    <T, R>(fn: (acc: R, el: T) => R,   init: R,   gen: GEN<TYPE, T>):   GEN<TYPE, R>;\n    <T, R>(fn: (acc: R, el: T) => R,   init: R): (gen: GEN<TYPE, T>) => GEN<TYPE, R>;\n    <T, R>(fn: (acc: R, el: T) => R): {\n        (init: R,   gen: GEN<TYPE, T>): GEN<TYPE, R>;\n        (init: R): (gen: GEN<TYPE, T>) => GEN<TYPE, R>;\n    };\n}\n\nexport const scan:      Scan<\"sync\">  = curryN(3, _scan);\nexport const scanAsync: Scan<\"async\"> = curryN(3, _scanAsync);\n","/* eslint-disable max-len */\nimport { uncurryN }        from \"ramda\";\nimport { scan, scanAsync } from \"./scan\";\nimport { GEN }             from \"./utils\";\n\nconst accumCounters = <T>(fn: (el: T) => string) => (acc: { [key: string]: number }, el: T) => ({\n    ...acc,\n    [fn(el)]: (acc[fn(el)] || 0) + 1,\n});\n\nconst _countBy = <T, R>(fn: (el: T) => string) => scan(accumCounters(fn), {});\n\nconst _countByAsync = <T, R>(fn: (el: T) => string) => scanAsync(accumCounters(fn), {});\n\ntype CountBy<TYPE extends \"sync\"|\"async\"> = {\n    <T, R>(fn: (el: T) => string,   gen: GEN<TYPE, T>):   GEN<TYPE, { [key: string]: number }>;\n    <T, R>(fn: (el: T) => string): (gen: GEN<TYPE, T>) => GEN<TYPE, { [key: string]: number }>;\n}\n\nexport const countBy:      CountBy<\"sync\">  = uncurryN(2, _countBy)      as CountBy<\"sync\">;\nexport const countByAsync: CountBy<\"async\"> = uncurryN(2, _countByAsync) as CountBy<\"async\">;\n","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _debounceBy<T, K>(fn: (el: T) => K, gen: Generator<T, void>) {\n    let lastKey: K | number = NaN;\n    // eslint-disable-next-line no-cond-assign\n    for (const value of gen) if (lastKey !== (lastKey = fn(value))) yield value;\n}\n\nasync function* _debounceByAsync<T, K>(fn: (el: T) => K, gen: AsyncGenerator<T, void>) {\n    let lastKey: K | number = NaN;\n    // eslint-disable-next-line no-cond-assign\n    for await (const value of gen) if (lastKey !== (lastKey = fn(value))) yield value;\n}\n\ntype Debounce<TYPE extends \"sync\"|\"async\"> = {\n    <T, K>(fn: (el: T) => K,   gen: GEN<TYPE, T>):   GEN<TYPE, K>;\n    <T, K>(fn: (el: T) => K): (gen: GEN<TYPE, T>) => GEN<TYPE, K>;\n}\n\nexport const debounceBy:      Debounce<\"sync\">  = curryN(2, _debounceBy);\nexport const debounceByAsync: Debounce<\"async\"> = curryN(2, _debounceByAsync);\n","import { identity }                    from \"ramda\";\nimport { debounceBy, debounceByAsync } from \"./debounceBy\";\n\nexport const debounce      = debounceBy(identity);\nexport const debounceAsync = debounceByAsync(identity);\n","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _dropWhile<T>(cond: (el: T) => boolean, gen: Generator<T, void>) {\n    let taking = false;\n    // eslint-disable-next-line no-cond-assign\n    for (const value of gen) if ((taking = taking || !cond(value))) yield value;\n}\n\nasync function* _dropWhileAsync<T>(cond: (el: T) => boolean, gen: AsyncGenerator<T, void>) {\n    let taking = false;\n    // eslint-disable-next-line no-cond-assign\n    for await (const value of gen) if ((taking = taking || !cond(value))) yield value;\n}\n\ntype DropWhile<TYPE extends \"sync\"|\"async\"> = {\n    <T>(cond: (el: T) => boolean,   gen: GEN<TYPE, T>):   GEN<TYPE, T>;\n    <T>(cond: (el: T) => boolean): (gen: GEN<TYPE, T>) => GEN<TYPE, T>;\n}\n\nexport const dropWhile:      DropWhile<\"sync\">  = curryN(2, _dropWhile);\nexport const dropWhileAsync: DropWhile<\"async\"> = curryN(2, _dropWhileAsync);\n","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _drop<T>(amount: number, gen: Generator<T, void>) {\n    // eslint-disable-next-line no-plusplus,no-param-reassign\n    for (const value of gen) if (amount-- <= 0) yield value;\n}\n\nasync function* _dropAsync<T>(amount: number, gen: AsyncGenerator<T, void>) {\n    // eslint-disable-next-line no-plusplus,no-param-reassign\n    for await (const value of gen) if (amount-- <= 0) yield value;\n}\n\ntype Drop<TYPE extends \"sync\"|\"async\"> = {\n    <T>(amount: number,   gen: GEN<TYPE, T>):   GEN<TYPE, T>;\n    (amount: number): <T>(gen: GEN<TYPE, T>) => GEN<TYPE, T>;\n}\n\nexport const drop:      Drop<\"sync\">  = curryN(2, _drop);\nexport const dropAsync: Drop<\"async\"> = curryN(2, _dropAsync);\n","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _filter<T>(cond: (el: T) => boolean, gen: Generator<T, void>) {\n    for (const value of gen) if (cond(value)) yield value;\n}\n\nasync function* _filterAsync<T>(cond: (el: T) => boolean, gen: AsyncGenerator<T, void>) {\n    for await (const value of gen) if (cond(value)) yield value;\n}\n\ntype Filter<TYPE extends \"sync\"|\"async\"> = {\n    <T>(cond: (el: T) => boolean,   gen: GEN<TYPE, T>):   GEN<TYPE, T>;\n    <T>(cond: (el: T) => boolean): (gen: GEN<TYPE, T>) => GEN<TYPE, T>;\n}\n\nexport const filter:      Filter<\"sync\">  =      curryN(2, _filter);\nexport const filterAsync: Filter<\"async\"> = curryN(2, _filterAsync);\n","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nconst _find = <T>(cond: (el: T) => boolean, gen: Generator<T, void>) => {\n    for (const value of gen) if (cond(value)) return value;\n    return null;\n};\n\nconst _findAsync = async <T>(cond: (el: T) => boolean, gen: AsyncGenerator<T, void>) => {\n    for await (const value of gen) if (cond(value)) return value;\n    return null;\n};\n\ntype Find<TYPE extends \"sync\"|\"async\"> = {\n    <T>(cond: (el: T) => boolean,   list: GEN<TYPE, T>):   TYPE extends \"sync\" ? T : Promise<T>;\n    <T>(cond: (el: T) => boolean): (list: GEN<TYPE, T>) => TYPE extends \"sync\" ? T : Promise<T>;\n}\n\nexport const find:      Find<\"sync\">  = curryN(2, _find);\nexport const findAsync: Find<\"async\"> = curryN(2, _findAsync);\n","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _flatMap<T, R>(fn: (el: T) => R[] | Generator<R, void>, gen: Generator<T, void>) {\n    for (const value of gen) yield * fn(value);\n}\n\nasync function* _flatMapAsync<T, R>(fn: (el: T) => R[] | Generator<R, void>, gen: AsyncGenerator<T, void>) {\n    for await (const value of gen) yield * fn(value);\n}\n\ntype FlatMap<TYPE extends \"sync\"|\"async\"> = {\n    <T, R>(fn: (el: T) => R[] | Generator<R>,   gen: GEN<TYPE, T>):   GEN<TYPE, R>;\n    <T, R>(fn: (el: T) => R[] | Generator<R>): (gen: GEN<TYPE, T>) => GEN<TYPE, R>;\n}\n\nexport const flatMap:      FlatMap<\"sync\">  = curryN(2, _flatMap);\nexport const flatMapAsync: FlatMap<\"async\"> = curryN(2, _flatMapAsync);\n","/* eslint-disable no-plusplus,no-console */\n\nexport const generate = <R>(fn: (index: number) => R, limit?: number) => ({\n    start: function* () {\n        for (let i = 0; !limit || i < limit; i++) yield fn(i);\n        console.log(`The stream has reached the limit of ${limit} elements`);\n    },\n});\n\nexport const generateAsync = <R>(fn: (index: number) => Promise<R>, limit?: number) => ({\n    start: async function* () {\n        for (let i = 0; !limit || i < limit; i++) yield await fn(i);\n        console.log(`The stream has reached the limit of ${limit} elements`);\n    },\n});\n\nexport const generateFromArray = <R>(v: R[]) => ({\n    start: function* () { for (const el of v) yield el; },\n});\n","export const head = <T>(gen: Generator<T, void>) => gen.next()?.value;\n\nexport const headAsync = async <T>(gen: AsyncGenerator<T, void>) => (await gen.next())?.value;\n","export function last<T>(gen: Generator<T, void>) {\n    let lastElement;\n    for (const value of gen) lastElement = value;\n    return lastElement;\n}\n\nexport async function lastAsync<T>(gen: AsyncGenerator<T, void>) {\n    let lastElement;\n    for await (const value of gen) lastElement = value;\n    return lastElement;\n}\n","/* eslint-disable max-len */\nimport { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _map<T, R>(fn: (el: T) => R, gen: Generator<T, void>) {\n    for (const value of gen) yield fn(value);\n}\n\nasync function* _mapAsync<T, R>(fn: (el: T) => R, gen: AsyncGenerator<T, void>) {\n    for await (const value of gen) yield fn(value);\n}\n\ntype Map<TYPE extends \"sync\"|\"async\"> = {\n    <T, R>(fn: (el: T) => R,   gen: GEN<TYPE, T>):   GEN<TYPE, R>;\n    <T, R>(fn: (el: T) => R): (gen: GEN<TYPE, T>) => GEN<TYPE, R>;\n}\n\nexport const map:      Map<\"sync\">  = curryN(2, _map);\nexport const mapAsync: Map<\"async\"> = curryN(2, _mapAsync);\n","import { curryN } from \"ramda\";\n\nconst sleep = (ms: number) => new Promise<void>(resolve => setTimeout(resolve, ms));\n\ntype PeriodicInput<R> =\n    { start: () => Generator<R, void>|Generator<Promise<R>, void> }\n    |Generator<R, void>\n    |(() => R)\n    |R[]\n\n// eslint-disable-next-line complexity\nasync function* _periodicFrom<R>(ms: number, list: PeriodicInput<R>) {\n    if (list instanceof Function) {\n        while (true) { yield list(); await sleep(ms); }\n    } else if (list instanceof Array) {\n        for (const el of list) { yield el; await sleep(ms); }\n    } else if (typeof list === \"object\" && \"start\" in list) {\n        for (const el of list.start()) { yield el; await sleep(ms); }\n    } else {\n        /* istanbul ignore next */\n        while (true) { yield list; await sleep(ms); }\n    }\n}\n\ntype PeriodicFrom = {\n    <R>(ms: number, list: PeriodicInput<R>):     { start: () => AsyncGenerator<R, void> };\n    (ms: number): <R>(list: PeriodicInput<R>) => { start: () => AsyncGenerator<R, void> };\n}\n\nexport const periodicFrom: PeriodicFrom = curryN(2, <R>(ms: number, list: PeriodicInput<R>) => ({\n    start: () => _periodicFrom(ms, list),\n}));\n\nexport const periodic = (ms: number) => periodicFrom<null>(ms, () => null);\n","import { curryN }   from \"ramda\";\nimport { generate } from \"./generate\";\n\nconst _range = (start: number, end: number) => generate(id => id + start, end - start);\n\ntype Range = {\n    (start: number,   end: number):   { start: () => Generator<number, void> };\n    (start: number): (end: number) => { start: () => Generator<number, void> };\n}\n\nexport const range: Range = curryN(2, _range);\n","/* eslint-disable max-len */\nimport { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _splitEvery<T, R>(size: number, gen: Generator<T, void>) {\n    let res = [];\n    for (const value of gen) {\n        if (res.length === size) { yield res; res = []; }\n        res.push(value);\n    }\n    yield res;\n}\n\nasync function* _splitEveryAsync<T, R>(size: number, gen: AsyncGenerator<T, void>) {\n    let res = [];\n    for await (const value of gen) {\n        if (res.length === size) { yield res; res = []; }\n        res.push(value);\n    }\n    yield res;\n}\n\ntype SplitEvery<TYPE extends \"sync\"|\"async\"> = {\n    <T>(size: number,   gen: GEN<TYPE, T>):   GEN<TYPE, T[]>;\n    (size: number): <T>(gen: GEN<TYPE, T>) => GEN<TYPE, T[]>;\n}\n\nexport const splitEvery:      SplitEvery<\"sync\">  = curryN(2, _splitEvery);\nexport const splitEveryAsync: SplitEvery<\"async\"> = curryN(2, _splitEveryAsync);\n","export function takeAll<T>(generator: Generator<T, void>) {\n    const res = [];\n    for (const value of generator) res.push(value);\n    return res;\n}\n\nexport async function takeAllAsync<T>(generator: AsyncGenerator<T, void>) {\n    const res = [];\n    for await (const value of generator) res.push(value);\n    return res;\n}\n","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _takeWhile<T>(cond: (el: T) => boolean, gen: Generator<T, void>) {\n    for (const value of gen) {\n        if (!cond(value)) break;\n        yield value;\n    }\n}\n\nasync function* _takeWhileAsync<T>(cond: (el: T) => boolean, gen: AsyncGenerator<T, void>) {\n    for await (const value of gen) {\n        if (!cond(value)) break;\n        yield value;\n    }\n}\n\ntype TakeWhile<TYPE extends \"sync\"|\"async\"> = {\n    <T>(cond: (el: T) => boolean,   list: GEN<TYPE, T>):   GEN<TYPE, T>;\n    <T>(cond: (el: T) => boolean): (list: GEN<TYPE, T>) => GEN<TYPE, T>;\n}\n\nexport const takeWhile:      TakeWhile<\"sync\">  = curryN(2, _takeWhile);\nexport const takeWhileAsync: TakeWhile<\"async\"> = curryN(2, _takeWhileAsync);\n","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction _take<T>(amount: number, gen: Generator<T, void>) {\n    const res = [];\n    for (const value of gen) {\n        // eslint-disable-next-line no-param-reassign,no-plusplus\n        if (amount-- <= 0) break;\n        res.push(value);\n    }\n    return res;\n}\n\nasync function _takeAsync<T>(amount: number, gen: AsyncGenerator<T, void>) {\n    const res = [];\n    for await (const value of gen) {\n        // eslint-disable-next-line no-param-reassign,no-plusplus\n        if (amount-- <= 0) break;\n        res.push(value);\n    }\n    return res;\n}\n\nfunction * _takeIterator<T>(amount: number, gen: Generator<T, void>) {\n    for (const value of gen) {\n        // eslint-disable-next-line no-param-reassign,no-plusplus\n        if (amount-- === 0) break;\n        yield value;\n    }\n    return amount + 1;\n}\n\nasync function * _takeAsyncIterator<T>(amount: number, gen: AsyncGenerator<T, void>) {\n    for await (const value of gen) {\n        // eslint-disable-next-line no-param-reassign,no-plusplus\n        if (amount-- <= 0) break;\n        yield value;\n    }\n    return amount + 1;\n}\n\ntype Take<TYPE extends \"sync\"|\"async\"> = {\n    <T>(amount: number,   list: GEN<TYPE, T>):   TYPE extends \"sync\" ? T[] : Promise<T[]>;\n    <T>(amount: number): (list: GEN<TYPE, T>) => TYPE extends \"sync\" ? T[] : Promise<T[]>;\n}\n\ntype TakeIterator<TYPE extends \"sync\"|\"async\"> = {\n    <T>(amount: number,   list: GEN<TYPE, T>):   GEN<TYPE, T>;\n    <T>(amount: number): (list: GEN<TYPE, T>) => GEN<TYPE, T>;\n}\n\nexport const take:      Take<\"sync\">  = curryN(2, _take);\nexport const takeAsync: Take<\"async\"> = curryN(2, _takeAsync);\n\nexport const takeIterator:      TakeIterator<\"sync\"> = curryN(2, _takeIterator);\nexport const takeAsyncIterator: TakeIterator<\"async\"> = curryN(2, _takeAsyncIterator);\n","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _uniqBy<T, Key>(fn: (el: T) => Key, gen: Generator<T, void>) {\n    const unique = new Set<Key>();\n    for (const value of gen) {\n        const key = fn(value);\n        if (!unique.has(key)) {\n            unique.add(key);\n            yield value;\n        }\n    }\n}\n\nasync function* _uniqByAsync<T, Key>(fn: (el: T) => Key, gen: AsyncGenerator<T, void>) {\n    const unique = new Set<Key>();\n    for await (const value of gen) {\n        const key = fn(value);\n        if (!unique.has(key)) {\n            unique.add(key);\n            yield value;\n        }\n    }\n}\n\ntype UniqBy<TYPE extends \"sync\"|\"async\"> = {\n    <T, Key>(fn: (el: T) => Key,   gen: GEN<TYPE, T>):   GEN<TYPE, T>;\n    <T, Key>(fn: (el: T) => Key): (gen: GEN<TYPE, T>) => GEN<TYPE, T>;\n}\n\nexport const uniqBy:      UniqBy<\"sync\">  = curryN(2, _uniqBy);\nexport const uniqByAsync: UniqBy<\"async\"> = curryN(2, _uniqByAsync);\n","import { curryN } from \"ramda\";\nimport { GEN }    from \"./utils\";\n\nfunction* _zipWith<T1, T2, R>(fn: (t1: T1, t2: T2) => R, gen1: Generator<T1, void>, gen2: Generator<T2, void>) {\n    /* istanbul ignore next */\n    while (true) {\n        const value1 = gen1.next();\n        const value2 = gen2.next();\n\n        if (value1.done || value2.done) return;\n        yield fn(value1.value, value2.value);\n    }\n}\n\n// eslint-disable-next-line max-len\nasync function* _zipWithAsync<T1, T2, R>(fn: (t1: T1, t2: T2) => R, gen1: AsyncGenerator<T1, void>, gen2: AsyncGenerator<T2, void>) {\n    /* istanbul ignore next */\n    while (true) {\n        const [value1, value2] = await Promise.all([gen1.next(), gen2.next()]);\n\n        if (value1.done || value2.done) return;\n        yield fn(value1.value, value2.value);\n    }\n}\n\ntype ZipWith<TYPE extends \"sync\"|\"async\"> = {\n    <T1, T2, R>(fn: (t1: T1, t2: T2) => R,   gen1: GEN<TYPE, T1>,     gen2: GEN<TYPE, T2>):   GEN<TYPE, R>;\n    <T1, T2, R>(fn: (t1: T1, t2: T2) => R,   gen1: GEN<TYPE, T1>):   (gen2: GEN<TYPE, T2>) => GEN<TYPE, R>;\n    <T1, T2, R>(fn: (t1: T1, t2: T2) => R): {\n        (gen1: GEN<TYPE, T1>, gen2: GEN<TYPE, T2>):     GEN<TYPE, R>;\n        (gen1: GEN<TYPE, T1>): (gen2: GEN<TYPE, T2>) => GEN<TYPE, R>;\n    };\n}\n\nexport const zipWith:      ZipWith<\"sync\">  = curryN(3, _zipWith);\nexport const zipWithAsync: ZipWith<\"async\"> = curryN(3, _zipWithAsync);\n","import { pair }                  from \"ramda\";\nimport { GEN }                   from \"./utils\";\nimport { zipWith, zipWithAsync } from \"./zipWith\";\n\ntype Zip<TYPE extends \"sync\"|\"async\"> = {\n    <T1, T2>(gen1: GEN<TYPE, T1>,   gen2: GEN<TYPE, T2>):   GEN<TYPE, [T1, T2]>;\n    <T1>(gen1: GEN<TYPE, T1>): <T2>(gen2: GEN<TYPE, T2>) => GEN<TYPE, [T1, T2]>;\n}\n\nexport const zip:      Zip<\"sync\">  = zipWith(pair) as Zip<\"sync\">;\nexport const zipAsync: Zip<\"async\"> = zipWithAsync(pair) as Zip<\"async\">;\n","/* istanbul ignore file */\nimport * as countBy    from \"./countBy\";\nimport * as debounceBy from \"./debounceBy\";\nimport * as debounce   from \"./debounce\";\nimport * as dropWhile  from \"./dropWhile\";\nimport * as drop       from \"./drop\";\nimport * as filter     from \"./filter\";\nimport * as find       from \"./find\";\nimport * as flatMap    from \"./flatMap\";\nimport * as generate   from \"./generate\";\nimport * as head       from \"./head\";\nimport * as last       from \"./last\";\nimport * as map        from \"./map\";\nimport * as periodic   from \"./periodic\";\nimport * as range      from \"./range\";\nimport * as scan       from \"./scan\";\nimport * as splitEvery from \"./splitEvery\";\nimport * as takeAll    from \"./takeAll\";\nimport * as takeWhile  from \"./takeWhile\";\nimport * as take       from \"./take\";\nimport * as uniqBy     from \"./uniqBy\";\nimport * as utils      from \"./utils\";\nimport * as zipWith    from \"./zipWith\";\nimport * as zip        from \"./zip\";\n\nexport default {\n    ...countBy,\n    ...debounceBy,\n    ...debounce,\n    ...dropWhile,\n    ...drop,\n    ...filter,\n    ...find,\n    ...flatMap,\n    ...generate,\n    ...head,\n    ...last,\n    ...map,\n    ...periodic,\n    ...range,\n    ...scan,\n    ...splitEvery,\n    ...takeAll,\n    ...takeWhile,\n    ...take,\n    ...uniqBy,\n    ...utils,\n    ...zipWith,\n    ...zip,\n};\n"],"names":["countBy","debounceBy","debounce","dropWhile","drop","filter","find","flatMap","generate","head","last","map","periodic","range","scan","splitEvery","takeAll","takeWhile","take","uniqBy","zipWith","zip"],"mappings":"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"}